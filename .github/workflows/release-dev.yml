name: release dev
on:
  push:
    ignore-branch: '!master'

jobs:
  test-matrix:
    name: matrix test
    runs-on: ubuntu-latest
    strategy:
      matrix:
        node-version: [10.x, 12.x, 14.x]

    steps:
    - uses: actions/checkout@v2

    - name: Cache node modules
      uses: actions/cache@v2
      env:
        cache-name: cache-node-modules
      with:
        # npm cache files are stored in `~/.npm` on Linux/macOS
        path: ~/.npm
        key: ${{ runner.os }}-build-${{ env.cache-name }}-${{ hashFiles('**/package.json') }}
        restore-keys: |
          ${{ runner.os }}-build-${{ env.cache-name }}-
          ${{ runner.os }}-build-
          ${{ runner.os }}-
          
    - name: Use Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v1
      with:
        node-version: ${{ matrix.node-version }}
    
    - name: test em
      run: npm install && npm install -g --save-dev shadow-cljs && shadow-cljs compile test

    - name: build release with node.js 14.x
      uses: actions/setup-node@v1
      with:
        node-version: 14.x

    - name: build em
      run: shadow-cljs release app && mkdir -p target/npm-build && cp mastodon-bot.js target/npm-build/ && cp package.json target/npm-build/ && cp README.md target/npm-build/ && tar -cz -C target/npm-build -f target/npm-build.tgz .

    - name: Create Release
      id: create_release
      uses: actions/create-release@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        tag_name: ${{ github.ref }}
        release_name: Release ${{ github.ref }}
        draft: false
        prerelease: true

    - name: Upload Release Asset
      id: upload-release-asset 
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_path: ./mastodon-bot.js
        asset_name: mastodon-bot.js
        asset_content_type: application/json
